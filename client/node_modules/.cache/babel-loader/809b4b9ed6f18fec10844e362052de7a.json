{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/auth/AuthState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport axios from 'axios';\nimport { baseURL, users } from '../../config/config';\nimport AuthContext from './contextAuth';\nimport AuthReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //load user\n  //register user\n\n  const register = async userData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(baseURL + users, userData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error.message);\n      debugger; // dispatch({ type: REGISTER_FAIL, payload: error.response.data.error });\n      // {\"errors\":[{\"value\":\"1\",\"msg\":\"Please enter a password with 6 or more characters\",\"param\":\"password\",\"location\":\"body\"}]}\n    }\n  }; //login user\n  //logout\n  //clear errors\n\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/auth/AuthState.js"],"names":["React","useReducer","createContext","axios","baseURL","users","AuthContext","AuthReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AuthState","props","initialState","token","localStorage","getItem","user","isAuthenticated","loading","error","state","dispatch","register","userData","config","headers","res","post","type","payload","data","console","log","message","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,qBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,QAQO,UARP;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,IAAI,EAAE,IAFa;AAGnBC,IAAAA,eAAe,EAAE,IAHE;AAInBC,IAAAA,OAAO,EAAE,IAJU;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,UAAU,CAACM,WAAD,EAAcU,YAAd,CAApC,CAT2B,CAW3B;AAEA;;AACA,QAAMU,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACnC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,IAAN,CAAW5B,OAAO,GAAGC,KAArB,EAA4BuB,QAA5B,EAAsCC,MAAtC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEzB,gBAAR;AAA0B0B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAAvC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOX,KAAP,EAAc;AACdY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,OAAlB;AACA,eAFc,CAGd;AACA;AACD;AACF,GAhBD,CAd2B,CAgC3B;AAEA;AAEA;;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELI,MAAAA,eAAe,EAAEG,KAAK,CAACH,eAFlB;AAGLD,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAHP;AAILE,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJV;AAKLC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLG,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGX,KAAK,CAACuB,QAVT,CADF;AAcD,CApDD;;AAsDA,eAAexB,SAAf","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport axios from 'axios';\nimport { baseURL, users } from '../../config/config';\nimport AuthContext from './contextAuth';\nimport AuthReducer from './authReducer';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //load user\n\n  //register user\n  const register = async (userData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post(baseURL + users, userData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n    } catch (error) {\n      console.log(error.message);\n      debugger;\n      // dispatch({ type: REGISTER_FAIL, payload: error.response.data.error });\n      // {\"errors\":[{\"value\":\"1\",\"msg\":\"Please enter a password with 6 or more characters\",\"param\":\"password\",\"location\":\"body\"}]}\n    }\n  };\n\n  //login user\n\n  //logout\n\n  //clear errors\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        register,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}