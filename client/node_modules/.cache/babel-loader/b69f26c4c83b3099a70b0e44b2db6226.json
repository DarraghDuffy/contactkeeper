{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/routing/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../context/auth/contextAuth';\n\nconst PrivateRoute = ({\n  component: Component\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  return /*#__PURE__*/React.createElement(Route, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","Component","authContext","isAuthenticated","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC;AAAb,CAAD,KAA8B;AACjD,QAAMC,WAAW,GAAGP,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM;AAAEK,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA+BF,WAArC;AAEA,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAGG,KAAD,IACN,CAACF,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CAfD;;AAiBA,eAAeN,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../context/auth/contextAuth';\n\nconst PrivateRoute = ({ component: Component }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Route\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}