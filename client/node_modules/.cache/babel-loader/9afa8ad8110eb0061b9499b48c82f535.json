{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: '1',\n      name: 'Jill Connors',\n      email: 'jill@dummy.com',\n      phone: '11-111-111',\n      type: 'personal'\n    }, {\n      id: '2',\n      name: 'James Foley',\n      email: 'james@dummy.com',\n      phone: '22-222-222',\n      type: 'professional'\n    }, {\n      id: '3',\n      name: 'Rachel Muprhy',\n      phone: '33-333-333',\n      email: '',\n      type: 'personal'\n    }],\n    current: null,\n    filtered: null,\n    filterSearch: ''\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Add Contact\n\n  const addContact = contact => {\n    contact.id = v4();\n    console.log(contact.id);\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = contactId => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: {\n        id: contactId\n      }\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      filterSearch: state.filterSearch,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","axios","ContactContext","ContactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","filterSearch","state","dispatch","addContact","contact","console","log","payload","deleteContact","contactId","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\n\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: '1',\n        name: 'Jill Connors',\n        email: 'jill@dummy.com',\n        phone: '11-111-111',\n        type: 'personal',\n      },\n      {\n        id: '2',\n        name: 'James Foley',\n        email: 'james@dummy.com',\n        phone: '22-222-222',\n        type: 'professional',\n      },\n      {\n        id: '3',\n        name: 'Rachel Muprhy',\n        phone: '33-333-333',\n        email: '',\n        type: 'personal',\n      },\n    ],\n    current: null,\n    filtered: null,\n    filterSearch: '',\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  //Add Contact\n  const addContact = (contact) => {\n    contact.id = v4();\n    console.log(contact.id);\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n  //Delete Contact\n  const deleteContact = (contactId) => {\n    dispatch({ type: DELETE_CONTACT, payload: { id: contactId } });\n  };\n\n  //Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  //Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  //Update Contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  //Filter Contacts\n  const filterContact = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  //Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        filterSearch: state.filterSearch,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}