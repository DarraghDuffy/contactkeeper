{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { contacts } from '../../config/config';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { GET_CONTACTS, CLEAR_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    filterSearch: '',\n    error: null\n  };\n  const [state, dispatch] = useReducer(ContactReducer, initialState); //Get Contact\n\n  const getContact = async () => {\n    try {\n      const res = await axios.get(contacts);\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      let errorObj = null;\n\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{\n          msg: error.response.data.message\n        }];\n      }\n\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: errorObj\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(contacts, contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      let errorObj = null;\n\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{\n          msg: error.response.data.message\n        }];\n      }\n\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: errorObj\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = contactId => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: {\n        id: contactId\n      }\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      filterSearch: state.filterSearch,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","contacts","setAuthToken","GET_CONTACTS","CLEAR_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","current","filtered","filterSearch","error","state","dispatch","getContact","res","get","type","GET_CONTACT","payload","data","errorObj","response","errors","msg","message","addContact","contact","config","headers","post","deleteContact","contactId","id","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { contacts } from '../../config/config';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    filterSearch: '',\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(ContactReducer, initialState);\n\n  //Get Contact\n  const getContact = async () => {\n    try {\n      const res = await axios.get(contacts);\n      dispatch({ type: GET_CONTACT, payload: res.data });\n    } catch (error) {\n      let errorObj = null;\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{ msg: error.response.data.message }];\n      }\n      dispatch({ type: CONTACT_ERROR, payload: errorObj });\n    }\n  };\n\n  //Add Contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post(contacts, contact, config);\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      let errorObj = null;\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{ msg: error.response.data.message }];\n      }\n      dispatch({ type: CONTACT_ERROR, payload: errorObj });\n    }\n  };\n  //Delete Contact\n  const deleteContact = (contactId) => {\n    dispatch({ type: DELETE_CONTACT, payload: { id: contactId } });\n  };\n\n  //Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  //Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  //Update Contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  //Filter Contacts\n  const filterContact = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  //Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        filterSearch: state.filterSearch,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContact,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}