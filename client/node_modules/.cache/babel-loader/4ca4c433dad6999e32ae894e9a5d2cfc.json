{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/auth/AuthState.js\";\nimport React, { useReducer, createContext } from 'react';\nimport axios from 'axios';\nimport { users, auth } from '../../config/config';\nimport AuthContext from './contextAuth';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); //load user\n\n  const loadUser = async () => {\n    // the JWT token will be set globally - if it exists\n    //make request to the utils file setAuthToken - imported above\n    setAuthToken();\n\n    try {\n      const res = await axios.get(auth); //api/auth\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async userData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(users, userData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      let errorObj = null;\n\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{\n          msg: error.response.data.message\n        }];\n      }\n\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: errorObj\n      });\n    }\n  }; //login user\n\n\n  const login = async userData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(auth, userData, config); // POSTS to /api/auth\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      let errorObj = null;\n\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{\n          msg: error.response.data.message\n        }];\n      }\n\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: errorObj\n      });\n    }\n  }; //logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //clear errors\n\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      lgout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/context/auth/AuthState.js"],"names":["React","useReducer","createContext","axios","users","auth","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AuthState","props","initialState","token","localStorage","getItem","user","isAuthenticated","loading","error","state","dispatch","loadUser","res","get","type","payload","data","register","userData","config","headers","post","errorObj","response","errors","msg","message","login","logout","lgout","children"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport axios from 'axios';\nimport { users, auth } from '../../config/config';\nimport AuthContext from './contextAuth';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    user: null,\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //load user\n  const loadUser = async () => {\n    // the JWT token will be set globally - if it exists\n    //make request to the utils file setAuthToken - imported above\n    setAuthToken();\n\n    try {\n      const res = await axios.get(auth); //api/auth\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (error) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  //register user\n  const register = async (userData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post(users, userData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      let errorObj = null;\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{ msg: error.response.data.message }];\n      }\n      dispatch({ type: REGISTER_FAIL, payload: errorObj });\n    }\n  };\n\n  //login user\n  const login = async (userData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post(auth, userData, config); // POSTS to /api/auth\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      let errorObj = null;\n      if (error.response.data.errors) {\n        errorObj = error.response.data.errors;\n      } else {\n        errorObj = [{ msg: error.response.data.message }];\n      }\n      dispatch({ type: LOGIN_FAIL, payload: errorObj });\n    }\n  };\n\n  //logout\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  //clear errors\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        lgout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}