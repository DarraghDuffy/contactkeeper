{"ast":null,"code":"var _jsxFileName = \"/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contextContext';\nexport default function ContactForm() {\n  const contactContext = useContext(ContactContext);\n  const {\n    current,\n    addContact,\n    clearCurrent,\n    updateContact\n  } = contactContext;\n  useEffect(() => {\n    if (current) {\n      setThisContact(current);\n    } else {\n      setThisContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext]);\n  const [contact, setThisContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => {\n    setThisContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!current) {\n      addContact(contact);\n      setThisContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    } else {\n      updateContact(contact);\n    }\n\n    clearCurrent();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, current && 'Edit Contact', !current && 'Add Contact'), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Contact type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    onChange: onChange,\n    checked: type === 'personal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), ' ', \"Personal\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    onChange: onChange,\n    checked: type === 'professional',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), ' ', \"Professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: 'btn btn-primary btn-block',\n    type: \"submit\",\n    value: current && 'Update Contact' || !current && 'Add Contact',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Clear All\")));\n}","map":{"version":3,"sources":["/Users/darragh/Documents/git/React/frontToBack/contactkeeper/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactItem","ContactContext","ContactForm","contactContext","current","addContact","clearCurrent","updateContact","setThisContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contextContext';\n\nexport default function ContactForm() {\n  const contactContext = useContext(ContactContext);\n  const { current, addContact, clearCurrent, updateContact } = contactContext;\n\n  useEffect(() => {\n    if (current) {\n      setThisContact(current);\n    } else {\n      setThisContact({ name: '', email: '', phone: '', type: 'personal' });\n    }\n  }, [contactContext]);\n\n  const [contact, setThisContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (e) => {\n    setThisContact({ ...contact, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!current) {\n      addContact(contact);\n      setThisContact({ name: '', email: '', phone: '', type: 'personal' });\n    } else {\n      updateContact(contact);\n    }\n    clearCurrent();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current && 'Edit Contact'}\n        {!current && 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        name='name'\n        placeholder='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        name='email'\n        placeholder='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        name='phone'\n        placeholder='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h3>Contact type</h3>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        onChange={onChange}\n        checked={type === 'personal'}\n      />{' '}\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        onChange={onChange}\n        checked={type === 'professional'}\n      />{' '}\n      Professional\n      <div>\n        <input\n          className={'btn btn-primary btn-block'}\n          type='submit'\n          value={(current && 'Update Contact') || (!current && 'Add Contact')}\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear All\n          </button>\n        </div>\n      )}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}